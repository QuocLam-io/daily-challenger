//!EVERY TIME YOU CHANGE THIS FILE, YOU NEED TO RUN `npx prisma generate` AND `npx prisma migrate dev` TO UPDATE THE PRISMA CLIENT

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  clerkUserId String      @unique
  email       String      @unique
  name        String?
  imageUrl    String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  challenges  Challenge[]

  // Relations for user connections
  connectionsRequested UserConnection[] @relation("requester")
  connectionsReceived  UserConnection[] @relation("receiver")
}

model UserConnection {
  id          String           @id @default(uuid())
  createdAt   DateTime         @default(now())
  status      ConnectionStatus @default(PENDING)
  requesterId String
  requester   User             @relation("requester", fields: [requesterId], references: [id], onDelete: Cascade)
  receiverId  String
  receiver    User             @relation("receiver", fields: [receiverId], references: [id], onDelete: Cascade)

  @@unique([requesterId, receiverId])
}

enum ConnectionStatus {
  PENDING
  ACCEPTED
  DECLINED
  BLOCKED
}

model Challenge {
  id          String         @id @default(uuid())
  challenge   String
  type        ChallengeType
  quantity    Int?
  progress    Int?
  completed   Boolean        @default(false)
  completedAt DateTime?
  description String?
  deadline    DateTime?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  deletedAt   DateTime?
  userId      String
  user        User           @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
  visibility  VisibilityEnum @default(PRIVATE)

  @@index([userId])
  @@index([visibility])
}

enum ChallengeType {
  NUMERICAL
  BOOLEAN
}

enum VisibilityEnum {
  PUBLIC
  FRIENDS_ONLY
  PRIVATE
}
